---
# ==============================
# Main VM Configuration Playbook
# ==============================
- name: Configure all VMs (DNS, System, Firewall, Docker DNS)
  hosts: all
  gather_facts: yes
  become: yes
  become_method: sudo

  vars:
    timezone: "Africa/Casablanca"
    upstream_dns_servers:
      - 1.1.1.1  # Cloudflare DNS
      - 8.8.8.8  # Google DNS
    fallback_dns_servers:
      - 1.0.0.1  # Cloudflare fallback
      - 8.8.4.4  # Google fallback

  tasks:
    # âœ… FIRST: Fix hostname resolution to prevent sudo warnings
    - name: Ensure hostname resolves in /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "127.0.1.1 {{ ansible_hostname }}"
        create: yes
        backup: yes
        regexp: "^127.0.1.1\\s+{{ ansible_hostname }}"
      tags: dns

    # âœ… CONFIGURE SYSTEM DNS with improved settings
    - name: Configure systemd-resolved with DNS
      ansible.builtin.blockinfile:
        path: /etc/systemd/resolved.conf
        block: |
          [Resolve]
          DNS={{ upstream_dns_servers | join(' ') }}
          FallbackDNS={{ fallback_dns_servers | join(' ') }}
          DNSStubListener=yes
          Cache=yes
          DNSSEC=no
          DNSOverTLS=no
          ReadEtcHosts=yes
        backup: yes
        marker: "# {mark} ANSIBLE MANAGED DNS BLOCK"
      notify: Restart systemd-resolved
      tags: dns

    - name: Ensure /etc/resolv.conf points to systemd-resolved stub
      ansible.builtin.file:
        src: /run/systemd/resolve/stub-resolv.conf
        dest: /etc/resolv.conf
        state: link
        force: yes
      notify: Restart systemd-resolved
      tags: dns

    # âœ… FORCE RESTART DNS SERVICES NOW
    - name: Restart systemd-resolved to apply DNS settings
      ansible.builtin.systemd:
        name: systemd-resolved
        state: restarted
        enabled: yes
      tags: dns

    # ðŸ§ª TEST DNS WITH TIMEOUT
    - name: Test DNS resolution with timeout
      ansible.builtin.command: timeout 10 nslookup google.com
      changed_when: false
      register: dns_test
      failed_when: false
      tags: dns

    - name: Display DNS test results
      ansible.builtin.debug:
        msg: |
          DNS Test {{ 'SUCCESS' if dns_test.rc == 0 else 'FAILED - May affect package installation' }}
          {{ dns_test.stdout_lines | join('\n') if dns_test.stdout_lines else dns_test.stderr_lines | join('\n') }}
      tags: dns

    # âœ… INSTALL PACKAGES
    - name: Update package cache and upgrade packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600
      ignore_errors: yes

    - name: Install essential packages including Docker
      ansible.builtin.apt:
        name:
          - vim
          - curl
          - git
          - htop
          - ufw
          - docker.io
        state: present
        install_recommends: no
      ignore_errors: yes

    # âœ… START AND ENABLE DOCKER
    - name: Ensure Docker service is started and enabled
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    # âœ… CONFIGURE DOCKER DNS
    - name: Check if Docker directory exists
      ansible.builtin.stat:
        path: /etc/docker
      register: docker_dir

    - name: Create Docker directory if it doesn't exist
      ansible.builtin.file:
        path: /etc/docker
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: not docker_dir.stat.exists

    - name: Configure Docker DNS
      ansible.builtin.copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "dns": {{ upstream_dns_servers | to_json }}
          }
        owner: root
        group: root
        mode: '0644'
      notify: Restart Docker
      ignore_errors: yes

    # âœ… SYSTEM CONFIGURATION
    - name: Set system timezone
      community.general.timezone:
        name: "{{ timezone }}"

    - name: Allow SSH through firewall
      community.general.ufw:
        rule: allow
        name: OpenSSH

    - name: Enable UFW firewall
      community.general.ufw:
        state: enabled
        policy: deny

  handlers:
    - name: Restart systemd-resolved
      ansible.builtin.systemd:
        name: systemd-resolved
        state: restarted
        enabled: yes

    - name: Restart Docker
      ansible.builtin.systemd:
        name: docker
        state: restarted
        enabled: yes