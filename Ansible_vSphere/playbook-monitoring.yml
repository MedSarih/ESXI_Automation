# ==============================
# Monitoring Server Playbook
# ==============================
- name: Setup Monitoring Server (Prometheus & Grafana)
  hosts: monitoring_servers
  gather_facts: true
  become: yes
  become_method: sudo

  vars:
    prometheus_port: 9090
    grafana_port: 3000
    monitoring_data_dir: /opt/monitoring
    grafana_admin_password: "{{ grafana_admin_password | default('grafanapassword') }}"

  tasks:
    - name: Ensure monitoring directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        recurse: yes
      loop:
        - "{{ monitoring_data_dir }}/prometheus/data"
        - "{{ monitoring_data_dir }}/grafana"

    - name: Fix Grafana data directory ownership (UID 472)
      ansible.builtin.file:
        path: "{{ monitoring_data_dir }}/grafana"
        owner: 472
        group: 472
        mode: '0755'
        recurse: yes

    - name: Pull Prometheus and Grafana images
      community.docker.docker_image:
        name: "{{ item.name }}"
        tag: "{{ item.tag }}"
        source: pull
      loop:
        - { name: "prom/prometheus", tag: "v2.45.0" }
        - { name: "grafana/grafana", tag: "9.5.6" }

    - name: Create Prometheus configuration with Node Exporter targets
      ansible.builtin.copy:
        dest: "{{ monitoring_data_dir }}/prometheus/prometheus.yml"
        owner: root
        group: root
        mode: '0644'
        content: |
          global:
            scrape_interval: 15s

          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:9090']

            - job_name: 'node_exporter'
              static_configs:
                - targets:
                {% for host in groups['all'] %}
                  - '{{ hostvars[host].ansible_host | default(host) }}:9100'
                {% endfor %}

    - name: Run Prometheus container
      community.docker.docker_container:
        name: prometheus
        image: prom/prometheus:v2.45.0
        state: started
        restart_policy: always
        ports:
          - "0.0.0.0:{{ prometheus_port }}:9090"
        volumes:
          - "{{ monitoring_data_dir }}/prometheus/data:/prometheus"
          - "{{ monitoring_data_dir }}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
        command: >
          --config.file=/etc/prometheus/prometheus.yml
          --storage.tsdb.path=/prometheus
          --web.enable-lifecycle

    - name: Run Grafana container
      community.docker.docker_container:
        name: grafana
        image: grafana/grafana:9.5.6
        state: started
        restart_policy: always
        ports:
          - "0.0.0.0:{{ grafana_port }}:3000"
        env:
          GF_SECURITY_ADMIN_USER: admin
          GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"
          GF_USERS_ALLOW_SIGN_UP: "false"
        volumes:
          - "{{ monitoring_data_dir }}/grafana:/var/lib/grafana"

    - name: Allow Prometheus and Grafana ports through firewall
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - "{{ prometheus_port }}"
        - "{{ grafana_port }}"
      