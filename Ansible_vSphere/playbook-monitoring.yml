# ==============================
# Monitoring Server Playbook (Optimized & Clean YAML)
# ==============================
- name: Setup Monitoring Server (Prometheus & Grafana)
  hosts: monitoring_servers
  gather_facts: true
  become: yes
  become_method: sudo

  vars:
    prometheus_port: 9090
    grafana_port: 3000
    monitoring_data_dir: /opt/monitoring
    grafana_admin_user: admin
    grafana_admin_password: "{{ grafana_admin_password | default('grafanapassword') }}"
    prometheus_image: "prom/prometheus:v2.45.0"
    grafana_image: "grafana/grafana:9.5.6"
    prometheus_volume: prometheus_data

  # =====================================
  # Pre-tasks: prepare OS and directories
  # =====================================
  pre_tasks:
    - name: Ensure UFW is installed
      ansible.builtin.package:
        name: ufw
        state: present

    - name: Ensure UFW is enabled
      community.general.ufw:
        state: enabled
        logging: on

    - name: Ensure monitoring directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ monitoring_data_dir }}/prometheus"
        - "{{ monitoring_data_dir }}/grafana"

    - name: Create Docker volume for Prometheus data
      community.docker.docker_volume:
        name: "{{ prometheus_volume }}"

  # ================================
  # Main tasks: configure containers
  # ================================
  tasks:
    - name: Build list of node_exporter targets
      set_fact:
        node_targets: "{{
          groups['all'] |
          map('extract', hostvars, 'ansible_host') |
          select('defined') |
          list |
          map('regex_replace', '$', ':9100') |
          list
        }}"

    - name: Create Prometheus configuration using structured data
      ansible.builtin.copy:
        dest: "{{ monitoring_data_dir }}/prometheus/prometheus.yml"
        content: |
          {{ {
              'global': {'scrape_interval': '15s'},
              'scrape_configs': [
                  {
                      'job_name': 'prometheus',
                      'static_configs': [{'targets': ['localhost:9090']}]
                  },
                  {
                      'job_name': 'node_exporter',
                      'static_configs': [{'targets': node_targets}]
                  }
              ]
          } | to_nice_yaml }}
        owner: root
        group: root
        mode: '0644'

    - name: Validate Prometheus YAML syntax
      command: python3 -c "import yaml; yaml.safe_load(open('{{ monitoring_data_dir }}/prometheus/prometheus.yml'))"
      changed_when: false

    - name: Show generated Prometheus config (debug)
      debug:
        msg: "{{ lookup('file', monitoring_data_dir + '/prometheus/prometheus.yml') }}"
      when: ansible_verbosity > 0

    - name: Pull Prometheus and Grafana images
      community.docker.docker_image:
        name: "{{ item.name }}"
        tag: "{{ item.tag }}"
        source: pull
      loop:
        - { name: "{{ prometheus_image.split(':')[0] }}", tag: "{{ prometheus_image.split(':')[1] }}" }
        - { name: "{{ grafana_image.split(':')[0] }}", tag: "{{ grafana_image.split(':')[1] }}" }

    - name: Run Prometheus container
      community.docker.docker_container:
        name: prometheus
        image: "{{ prometheus_image }}"
        state: started
        restart_policy: always
        recreate: yes
        ports:
          - "{{ prometheus_port }}:9090"
        volumes:
          - "{{ prometheus_volume }}:/prometheus"
          - "{{ monitoring_data_dir }}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
        command: >
          --config.file=/etc/prometheus/prometheus.yml
          --storage.tsdb.path=/prometheus
          --web.enable-lifecycle

    - name: Run Grafana container
      community.docker.docker_container:
        name: grafana
        image: "{{ grafana_image }}"
        state: started
        restart_policy: always
        recreate: yes
        ports:
          - "{{ grafana_port }}:3000"
        env:
          GF_SECURITY_ADMIN_USER: "{{ grafana_admin_user }}"
          GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"
          GF_USERS_ALLOW_SIGN_UP: "false"
        volumes:
          - "{{ monitoring_data_dir }}/grafana:/var/lib/grafana"

    - name: Allow Prometheus and Grafana ports through firewall
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - "{{ prometheus_port }}"
        - "{{ grafana_port }}"

  # =====================================
  # Post-tasks: confirm services & info
  # =====================================
  post_tasks:
    - name: Confirm Prometheus is running
      ansible.builtin.command: docker inspect -f '{{ '{{.State.Running}}' }}' prometheus
      register: prometheus_running
      until: prometheus_running.stdout == "True"
      retries: 6
      delay: 5
      ignore_errors: true

    - name: Print access URLs
      debug:
        msg: |
          =========================================
          Monitoring Access Info:
          Prometheus: http://{{ ansible_host }}:{{ prometheus_port }}
          Grafana: http://{{ ansible_host }}:{{ grafana_port }}
          Login: {{ grafana_admin_user }} / {{ grafana_admin_password }}
          =========================================
