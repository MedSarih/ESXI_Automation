---
# Monitoring Server Setup Playbook
# This playbook runs ONLY on the dedicated monitoring VM to deploy Prometheus and Grafana
- name: Setup Monitoring Server (Prometheus & Grafana)
  hosts: monitoring_servers     # Run only on VMs in [monitoring_servers] group
  become: true                  # Execute tasks with sudo privileges

  # Define variables for monitoring configuration
  vars:
    prometheus_port: 9090                           # Port for Prometheus web interface
    grafana_port: 3000                              # Port for Grafana web interface
    monitoring_data_dir: /opt/monitoring            # Directory for persistent monitoring data
    new_user: devopsadmin                           # User for file ownership

  # List of tasks to execute on monitoring VM only
  tasks:
    ###########################################################################
    # DOCKER INSTALLATION & SETUP
    ###########################################################################
    
    # Install Docker container platform and required dependencies
    - name: Install Docker and dependencies
      apt:
        name:
          - docker.io              # Docker container runtime
          - python3-pip            # Python package manager (for Docker modules)
        state: present             # Ensure packages are installed

    # Install Python Docker library so Ansible can manage Docker containers
    - name: Install Docker Python modules
      pip:
        name: docker               # Python library for Docker API
        state: present             # Ensure library is installed

    # Start Docker service and enable auto-start on boot
    - name: Start and enable Docker service
      systemd:
        name: docker               # Docker service name
        state: started             # Start service now
        enabled: yes               # Enable auto-start on boot

    ###########################################################################
    # PERSISTENT STORAGE SETUP
    ###########################################################################
    
    # Create directories for persistent monitoring data storage
    - name: Create monitoring directories
      file:
        path: "{{ item }}"         # Directory path to create
        state: directory           # Create directory if it doesn't exist
        owner: "{{ new_user }}"    # Set ownership to admin user
        group: "{{ new_user }}"    # Set group ownership
        mode: '0755'               # Set appropriate permissions (rwx for owner, rx for others)
      loop:
        - "{{ monitoring_data_dir }}/prometheus"  # Data directory for Prometheus
        - "{{ monitoring_data_dir }}/grafana"     # Data directory for Grafana

    ###########################################################################
    # PROMETHEUS DEPLOYMENT
    ###########################################################################
    
    # Download official Prometheus Docker image from Docker Hub
    - name: Pull Prometheus Docker image
      docker_image:
        name: prom/prometheus:v2.45.0  # Official Prometheus image with version tag
        source: pull                   # Pull from Docker Hub

    # Create Prometheus configuration file with monitoring targets
    - name: Create Prometheus configuration
      copy:
        content: |
          # Global Prometheus configuration
          global:
            scrape_interval: 15s     # How frequently to collect metrics from targets
            
          # Configuration for scraping targets
          scrape_configs:
            # Monitor Prometheus server itself
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:9090']  # Prometheus self-monitoring
                
            # Template for monitoring other servers with Node Exporter
            - job_name: 'node_exporter'
              static_configs:
                - targets: []  # Add your other VM IPs here like ['192.168.1.10:9100']
        dest: "{{ monitoring_data_dir }}/prometheus/prometheus.yml"  # Config file location
        owner: "{{ new_user }}"      # Set file ownership
        group: "{{ new_user }}"      # Set group ownership
        mode: '0644'                 # Set appropriate permissions (rw for owner, r for others)

    # Deploy Prometheus container with persistent storage and configuration
    - name: Run Prometheus container
      docker_container:
        name: prometheus                    # Container name
        image: prom/prometheus:v2.45.0      # Docker image to use
        ports:
          - "{{ prometheus_port }}:9090"    # Map host port to container port (9090:9090)
        volumes:
          # Mount data directory for persistent storage of metrics
          - "{{ monitoring_data_dir }}/prometheus:/prometheus"
          # Mount configuration file as read-only
          - "{{ monitoring_data_dir }}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
        command:
          # Prometheus startup parameters
          - '--config.file=/etc/prometheus/prometheus.yml'  # Configuration file location
          - '--storage.tsdb.path=/prometheus'               # Data storage location
          - '--web.enable-lifecycle'                        # Enable API for reload/restart
        restart_policy: unless-stopped      # Restart container unless manually stopped
        state: started                      # Ensure container is running

    ###########################################################################
    # GRAFANA DEPLOYMENT
    ###########################################################################
    
    # Download official Grafana Docker image from Docker Hub
    - name: Pull Grafana Docker image
      docker_image:
        name: grafana/grafana:9.5.6   # Official Grafana image with version tag
        source: pull                  # Pull from Docker Hub

    # Deploy Grafana container with persistent storage and security settings
    - name: Run Grafana container
      docker_container:
        name: grafana                     # Container name
        image: grafana/grafana:9.5.6      # Docker image to use
        ports:
          - "{{ grafana_port }}:3000"     # Map host port to container port (3000 is Grafana default)
        volumes:
          # Mount data directory for persistent storage of dashboards, users, settings
          - "{{ monitoring_data_dir }}/grafana:/var/lib/grafana"
        environment:
          # Set default admin credentials (CHANGE AFTER FIRST LOGIN!)
          GF_SECURITY_ADMIN_USER: admin
          GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password | default('admin123') }}"
          # Disable user registration for security
          GF_USERS_ALLOW_SIGN_UP: "false"
        restart_policy: unless-stopped      # Restart container unless manually stopped
        state: started                      # Ensure container is running

    ###########################################################################
    # FIREWALL CONFIGURATION FOR MONITORING SERVICES
    ###########################################################################
    
    # Open firewall ports to allow access to monitoring services
    - name: Allow Prometheus and Grafana through firewall
      ufw:
        rule: allow                       # Allow incoming connections
        port: "{{ item }}"                # Port number to open
        proto: tcp                        # TCP protocol
      loop:
        - "{{ prometheus_port }}"         # Open Prometheus port (9090)
        - "{{ grafana_port }}"            # Open Grafana port (3000)

    
 